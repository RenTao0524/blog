import{_ as e,p as a,q as n,a1 as r}from"./framework-f385dd5f.js";const c={},s=r(`<h2 id="docker-run" tabindex="-1"><a class="header-anchor" href="#docker-run" aria-hidden="true">#</a> docker run</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token function">node</span> <span class="token function">node</span> <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>各个参数解析：</p><p>docker: Docker 的二进制执行文件。</p><p>run: 与前面的 docker 组合来运行一个容器。</p><p>node 指定要运行的镜像，Docker 首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像。</p><p>node -v: 在启动的容器里执行的命令</p></div><h2 id="docker-run-i-t" tabindex="-1"><a class="header-anchor" href="#docker-run-i-t" aria-hidden="true">#</a> docker run -i -t</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-i</span> <span class="token parameter variable">-t</span> <span class="token function">node</span> /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>各个参数解析：</p><p>-t: 在新容器内指定一个伪终端或终端。</p><p>-i: 允许你对容器内的标准输入 (STDIN) 进行交互。</p><p>/bin/bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。</p></div><p>docker run</p><p>docker run -i -t</p><p>docker run -i -t xx bin/bash</p><p>docker run -d</p><p>docker ps docker ps -a</p><p>docker logs container_id</p><p>docker stop container_id</p><p>docker stop amazing_cori</p><p>docker comman --help</p><p>docker pull</p><p>docker start/restart container_id</p><p>docker run -itd images</p><p>docker attach</p><p>docker exec：推荐大家使用 docker exec 命令，因为此命令会退出容器终端，但不会导致容器的停止。</p><p>docker export</p><p>docker import</p><p>docker rm -f xxx</p><p>docker container prune</p><p>docker search xximage</p>`,25),o=[s];function p(d,i){return a(),n("div",null,o)}const l=e(c,[["render",p],["__file","dockercommand.html.vue"]]);export{l as default};
